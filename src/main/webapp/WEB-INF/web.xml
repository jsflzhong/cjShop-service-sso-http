<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="taotao" version="2.5">
	<display-name>cjShop-service-sso</display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>

	<!--// 初始化spring容器. 由于本项目把spring的配置文件拆成了好几个,所以这里直接用通配符给全扫了,省了一个spring的主配置入口文件.-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring/applicationContext-*.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>


	<!-- //解决post乱码 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!--*/-->


	<!-- //springmvc的前端控制器 -->
	<servlet>
		<servlet-name>cjShop-service-sso</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 
			//contextConfigLocation 不是必须的， 如果不配置contextConfigLocation， 
			//springmvc的配置文件默认在：WEB-INF/servlet的name+"-servlet.xml" 

			//但是一般,我们还是像这样,指定这个配置文件的位置和名字吧!!
		-->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/springmvc.xml</param-value>
		</init-param>
		<!--
			//在启动tomcat时,就初始化这个servlet.
			//如果不加这个,则第一次访问springmvc时,才会初始化.
		-->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>cjShop-service-sso</servlet-name>
		<!--
		/**
		这个拦截里配置的斜杠/,表示静态资源也会被拦截.
		解决方案是:在springmvc中,配置一个资源映射.用<resource>标签.(已解决)
		当然这里也可以拦截: *.action 或*.do .那样就不涉及到静态资源映射的问题了.
		*/
		注意: 这里不能写作: /* . 如果多了后面的*,会导致视图解析器解析jsp失败!无法打开jsp!
		-->
		<url-pattern>/</url-pattern>
	</servlet-mapping>

</web-app>